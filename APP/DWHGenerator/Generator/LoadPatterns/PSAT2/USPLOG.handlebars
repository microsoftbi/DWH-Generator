USE [{{PSADatabaseName}}]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

{{#each MTA}}

CREATE PROCEDURE [{{SchemaName}}].[USP_{{ObjectName}}_LOG]
AS
	BEGIN
	DECLARE @LOGSOURCE AS NVARCHAR(100);
	SET @LOGSOURCE = N'[{{../PSADatabaseName}}].[{{SchemaName}}].[USP_{{ObjectName}}_LOG]';
	
	EXEC META.dbo.USP_WRITELOG N'Start to load [{{../PSADatabaseName}}].[{{SchemaName}}].[{{ObjectName}}_LOG]', @LOGSOURCE, N'N';
	
	BEGIN TRY
		BEGIN TRAN;
	
			INSERT INTO [{{SchemaName}}].[{{ObjectName}}_LOG]
			(
				[LOAD_DTS],
				[LOAD_DTS_BATCH],
				[SEQUENCE_NO],
				[CDC_OPERATION_CODE],
				[RECORD_SOURCE],
				[FULLY_QUALIFIED_FILE_NAME],
				[INSERT_DTS],
				[UPDATE_DTS],
				[EXPORT_DTS],
				[FILE_TRANSFER_DTS],
				[SESSION_DTS],
				[SOURCE_SLICE_DTS],
				[LOAD_TYPE],
				[HK],
				[HD],
				[HF],
				{{#each PK}}
				[{{FieldName}}],
				{{/each}}
				{{#each DI}}
				[{{FieldName}}]{{#unless @last}},{{/unless}}
				{{/each}}
			)
			SELECT CDC.LOAD_DTS,
				CDC.LOAD_DTS_BATCH,
				CDC.SEQUENCE_NO,
				CDC.CDC_OPERATION_CODE,
				CDC.RECORD_SOURCE,
				CDC.FULLY_QUALIFIED_FILE_NAME,
				CDC.INSERT_DTS,
				CDC.UPDATE_DTS,
				CDC.EXPORT_DTS,
				CDC.FILE_TRANSFER_DTS,
				CDC.SESSION_DTS,
				CDC.SOURCE_SLICE_DTS,
				CDC.LOAD_TYPE AS LOAD_TYPE,
				CDC.HK AS HK,
				CDC.HD AS HD,
				CDC.HF AS HF,
				{{#each PK}}
				CDC.[{{FieldName}}],
				{{/each}}
				{{#each DI}}
				CDC.[{{FieldName}}]{{#unless @last}},{{/unless}}
				{{/each}}
			FROM [{{SchemaName}}].[{{ObjectName}}_CDC] AS CDC
			LEFT JOIN [{{SchemaName}}].[{{ObjectName}}_LOG] AS HDA WITH (NOLOCK)
				ON HDA.HK = CDC.HK AND HDA.LOAD_DTS = CDC.LOAD_DTS
			WHERE HDA.HK IS NULL;
			
			EXEC META.dbo.USP_WRITELOG N'Finish to load [{{../PSADatabaseName}}].[{{SchemaName}}].[{{ObjectName}}_LOG]', @LOGSOURCE, N'N';
			
		COMMIT TRAN;
	END TRY
	BEGIN CATCH
	
		DECLARE @ERROR_MESSAGE AS NVARCHAR(4000);
		SET @ERROR_MESSAGE = N'Failed to load [{{../PSADatabaseName}}].[{{SchemaName}}].[{{ObjectName}}_LOG]' + ISNULL(ERROR_MESSAGE(), '');
		EXEC META.dbo.USP_WRITELOG @ERROR_MESSAGE, @LOGSOURCE, N'E';
	END CATCH
	END;
GO


{{/each}}